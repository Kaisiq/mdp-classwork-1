# This is a basic workflow to help you get started with Actions

name: Docker CI

# Controls when the workflow will run
on: push
  # Triggers the workflow on push or pull request events but only for the "main" branch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  sonarcloud:
    name: Test Code with SonarCloud
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  snyk-test:
    name: Test Code with Snyk
    needs: Clone
    runs-on: ubuntu-latest
    steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with: 
          name: code
          path: .
      - name: Install Snyk
        run: |
          npm install snyk -g
      - name: Login to Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Run Snyk to check for vulnerabilities
        run: |
          cd src
          pip3 install -r requirements.txt
          snyk test --file=requirements.txt --command=python3
          snyk monitor --file=requirements.txt --command=python3
        
  Clone:
    # The type of runner that the job will run on
    name: Clone repo
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Upload Repo
        uses: actions/upload-artifact@v3
        with:
          name: code
          path: .
  Build-and-Push:
    runs-on: ubuntu-latest
    needs: Clone
    steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with: 
          name: code
          path: .
      - name: Build Docker image
        run: |
           docker build -t mdp-classwork-1 src/
      # Runs a set of commands using the runners shell
      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: mdp-classwork-1
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: login to docker
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: add tag to image
        run: |
          docker tag mdp-classwork-1 kaisiq/mdp-classwork-1
          docker image ls
      - name: push
        run: docker push kaisiq/mdp-classwork-1
